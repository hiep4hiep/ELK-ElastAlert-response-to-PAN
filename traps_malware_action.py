######################################
# Author: Hiep Nguyen               ##
# Email: hnguyen@paloaltonetworks.com#
######################################

import os
import requests
import sys
from linebot import LineBotApi
from linebot.models import TextSendMessage
from linebot.exceptions import LineBotApiError
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

#### PROCESS RAW LOG FROM ELK ###

log = sys.stdin.readline()
log = log[1:-1]

def get_hash(l):
    i = int(l.find("Hash"))
    h = l[i+8:i+72]
    return(h)

def get_source_ip(l):
    start = int(l.find("AgentIp")) + 11
    stop = int(l.find("priority")) - 4
    h = l[start:stop]
    return(h)


#### QUERY AF ####
cmd = 'python ./example_rules/af_lenz.py -i hash -q '+ get_hash(log)+' -r hash_scrape -o http,dns,connection -f suspicious > iocraw.txt'
os.system(cmd)


#### REGISTER TAG FUNCTION ####
def get_api_key(ip,username,password):
    url = "http://"+ip+"/api/?type=keygen&user="+username+"&password="+password
    response = requests.get(url)
    r = response.text
    r = r[42:-26]
    return(r)

def user_id_add_post(ip,key):
    url = "http://"+ip+"/api/?type=user-id&key="+key+'&cmd='+convert_xml('user-id.xml')
    response = requests.post(url)
    print(response.text)


def dynamic_group(ip,key,xml):
    url = "http://"+ip+"/api/?type=user-id&key="+key+'&cmd='+xml
    response = requests.post(url)
    return(response.text)

def create_body_xml(l):
    xml_body_full = ""
    for ip in l:
        xml_body = '''\
                    <entry ip="{}">
                    <tag>
                    <member>bad-ip</member>
                    </tag>
                    </entry>\n'''
        xml_body_full = xml_body_full + xml_body.format(ip)
    return(xml_body_full)


def register_dag_xml(l):
    xml_head = '''\
    <uid-message>
    <version>1.0</version>
    <type>update</type>
    <payload>
    <register>'''
    xml_tail = '''\
    </register> 
    </payload>
    </uid-message>'''
    xml = xml_head + create_body_xml(l) + xml_tail
    return(xml.replace('>    <', '><').replace('>                    <','><').replace('>     <','><').replace('    ',''))


def register_tag(l, ip, key):
    registerxml = register_dag_xml(l)
    dynamic_group(ip, key,registerxml)


#### QUERY AUTOFOCUS FOR BAD IP ####

def get_hyphen(line):
    return(line.find(','))

def get_hyphen_ip(line):
    pos = []
    for i, c in enumerate(line):
        if c == ',':
            pos.append(i)
    line = line[pos[1]+1:pos[2]-1]
    line = line[1:line.find(':')]
    return(line)


def get_dns(file):
    l = ""
    start = 0
    stop = 0
    with open(file, "r") as f:
        for (i, line) in enumerate(f):
            #print("line ",i ,line)
            if '[+] dns [+]' in line:
                start = i + 2
            if '[+] connection [+]' in line:
                stop = i - 2
    with open(file, "r") as f:
        lines = f.readlines()
        for n in range(start,stop):
            domain = lines[n]
            print(domain[0:get_hyphen(domain)-1])


def get_ip(file):
    l = ""
    start = 0
    stop = 0
    listip = []
    with open(file, "r") as f:
        for (i, line) in enumerate(f):
            #print("line ",i ,line)
            if '[+] connection [+]' in line:
                start = i + 2
            if 'of suspicious [+]' in line:
                stop = i - 1
    with open(file, "r") as f:
        lines = f.readlines()
        for n in range(start,stop):
            ip = lines[n]
            listip.append(get_hyphen_ip(ip))
    return(listip)


### SEND MESSAGE TO LINE ####


line_bot_api = LineBotApi('eDD+aoDelm/4fnZpnnnaU48nD/87uGrAOtdrYEdQNVIXXf6oOZt60P2Jl9WGnw2AJ6f1basfOT1sbnWSYj2usL55cWN+E+W4rK7PqquoVyaSdud9r7hxfgs0GwOfRqjsjkG0brdsRYJyU04ZtV4eTAdB04t89/1O/w1cDnyilFU=')

try:
    line_bot_api.push_message('Cd7e4fe2b786f16f81d079bb66c6036c6', TextSendMessage(text='Malware execution detected on machine '+get_source_ip(log)+'. But do not worry, Traps blocked it and Firewall blocked its malicious connections automatically by ELK'))
except LineBotApiError as e:
    print("Group is unavailable")

## >>> START <<< ##

#** Input information to log in to Firewall **
ipaddr = "13.76.99.49"
user = "hnguyen"
passwd = "P@loalto3220"
k = get_api_key(ipaddr,user,passwd)

#Send email
fromaddr = "hieptestlab@gmail.com"
toaddr = "hiep4hiep@gmail.com"
msg = MIMEMultipart()
msg['From'] = fromaddr
msg['To'] = toaddr
msg['Subject'] = "[ELK] Malware detection and remediation triggered"

html_head = """\
    <html>
      <head></head>
      <body>
        <p><span style="color: #ff0000;"><strong>Malware acvitities detected in machine {}</strong></span></p>"""
html_tail = """\
      </body>
    </html>
"""

body = html_head.format(get_source_ip(log)) + log + html_tail
print('Sending notification email to ',toaddr)
msg.attach(MIMEText(body,'html'))

server = smtplib.SMTP('smtp.gmail.com', 587)
server.starttls()
server.login(fromaddr, "C1sco12345")
text = msg.as_string()
server.sendmail(fromaddr, toaddr, text)
server.quit()

badip = get_ip('iocraw.txt')
print(badip)
register_tag(badip, ipaddr, k)
